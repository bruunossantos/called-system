// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid())
  name         String   @unique
  creationDate DateTime @default(now())
  called       Called[]
}

model Category {
  id     Int      @id @default(autoincrement())
  name   String   @unique
  called Called[]
}

model Situation {
  id     Int      @id @default(autoincrement())
  name   String   @unique
  called Called[]
}

model Called {
  id            String       @id @default(uuid())
  title         String
  description   String       @db.Text
  openDate      DateTime     @default(now())
  startDate     DateTime?
  timeSpent     Int          @default(0)
  updateDate    DateTime     @updatedAt
  endDate       DateTime?
  userRequestId String
  userRequest   User         @relation(fields: [userRequestId], references: [id])
  categoryId    Int
  category      Category     @relation(fields: [categoryId], references: [id])
  situationId   Int
  situation     Situation    @relation(fields: [situationId], references: [id])
  commentary    Commentary[]
}

model Commentary {
  id           String   @id @default(uuid())
  description  String
  creationDate DateTime @default(now())
  calledId     String
  called       Called   @relation(fields: [calledId], references: [id])
}
